{"remainingRequest":"/Users/marcelo.moraes/.nvm/versions/node/v14.15.4/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/marcelo.moraes/Desktop/eventos-metodos/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/marcelo.moraes/Desktop/eventos-metodos/App.vue","mtime":1611607121950},{"path":"/Users/marcelo.moraes/.nvm/versions/node/v14.15.4/lib/node_modules/@vue/cli-service-global/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/marcelo.moraes/.nvm/versions/node/v14.15.4/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/marcelo.moraes/.nvm/versions/node/v14.15.4/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KIApjb25zdCBmb2N1cyAgPSB7IAogICAgaW5zZXJ0ZWQ6IChlbCkgPT4geyAKICAgICAgIGVsLmZvY3VzKCkgIAogICAgfQp9CmV4cG9ydCBkZWZhdWx0IHsKICAgIGRpcmVjdGl2ZXM6IHsgCiAgICAgICAgZm9jdXMKICAgIH0sIAogICAgCiAgICBkYXRhOiAoKSA9PiAoewogICAgICAgIGN1cnJlbnRUYXNrczogJycsIAogICAgICAgIHNob3dMaXN0IDogZmFsc2UsIAogICAgICAgIHRhc2tzOiBbIAogICAgICAgICAgICAgICAgeyBuYW1lOiAnZmF6ZW5kbyBvIGN1cnNvJywgaXNEb25lOiBmYWxzZX0KICAgICAgICAgICAgICAgXQogICAgfSksCgogICBtZXRob2RzOiB7CgogICAgICAgYWRkVGFza3MoKXsgCiAgICAgICAgICAgdGhpcy50YXNrcy5wdXNoKHsKICAgICAgICAgICAgICAgbmFtZTogdGhpcy5jdXJyZW50VGFza3MsIGlzRG9uZTogZmFsc2UKICAgICAgICAgICB9KQogICAgICAgICAgIHRoaXMuY3VycmVudFRhc2tzJycKICAgICAgIH0sCgogICAgICAgY29tcGxldGUodGFzaykgeyAKICAgICAgICAgICB0aGlzLnRhc2tzID0gdGhpcy50YXNrcy5tYXAodCA9PiB7IAogICAgICAgICAgICAgICAgaWYgKHQubmFtZSA9PT10YXNrLm5hbWUpIHsgCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsuLi50LCBpc0RvbmU6ICF0LmlzRG9uZSB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4geyAuLi4gdH0KICAgICAgICAgICB9KQogICAgICAgfSwgCgogICAgICAgaGFuZGxlU2hvd0hpZGVMaXN0KCkgeyAKICAgICAgICAgICAgdGhpcy5zaG93TGlzdCA9ICF0aGlzLnNob3dMaXN0CiAgICAgICB9LCAKCiAgICAgICByZW1vdmUgKHRhc2spIHsKICAgICAgICAgICB0aGlzLnRhc2tzID0gdGhpcy50YXNrcy5maWx0ZXIoIHQ9PnQubmFtZSAhPT0gdGFzay5uYW1lKQogICAgICAgCiAgICAgICB9CiAgIH0KfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA","file":"App.vue","sourceRoot":".","sourcesContent":["<template> \n<div> \n<h1> Minhas lista de Tarefas </h1>\n<button @click=\"handleShowHideList\"> \nVer a lista!\n</button>\n<br> \n\n<input type=\"text\" v-focus v-model=\"currentTasks\"> \n\n<ul v-if=\"showList\"> \n    <li\n    v-for=\"(task, index) in tasks\"\n    @dblclick=\"complete(task)\"\n    :key=\"`${task}-${index}`\"\n    class=\"task-item\"\n    :class=\"{ \n        'line-through': task.isDone    \n    }\" \n\n    >\n        {{task.name}}\n\n        <button\n        @click=\"remove(task)\"\n        > &times; </button> \n    </li>\n    \n</ul>     \n<p v-else> Lista de tarefas escondidas </p> \n\n</div>\n</template>\n\n<script> \nconst focus  = { \n    inserted: (el) => { \n       el.focus()  \n    }\n}\nexport default {\n    directives: { \n        focus\n    }, \n    \n    data: () => ({\n        currentTasks: '', \n        showList : false, \n        tasks: [ \n                { name: 'fazendo o curso', isDone: false}\n               ]\n    }),\n\n   methods: {\n\n       addTasks(){ \n           this.tasks.push({\n               name: this.currentTasks, isDone: false\n           })\n           this.currentTasks''\n       },\n\n       complete(task) { \n           this.tasks = this.tasks.map(t => { \n                if (t.name ===task.name) { \n                    return {...t, isDone: !t.isDone }\n                }\n                return { ... t}\n           })\n       }, \n\n       handleShowHideList() { \n            this.showList = !this.showList\n       }, \n\n       remove (task) {\n           this.tasks = this.tasks.filter( t=>t.name !== task.name)\n       \n       }\n   }\n}\n</script>\n\n<style scoped>\n\n    .line-through{ \n    text-decoraion: line-through;\n    }\n    \n    .task-item { \n    cursor: pointer;\n    }\n\n</style> \n\n"]}]}